{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/my-purchase-tracker/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["// src/app/api/auth/[...nextauth]/route.ts\n\nimport NextAuth, { NextAuthOptions } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n\tCredentialsProvider({\n\t  name: \"Credentials\",\n\t  credentials: {\n\t\temail: { label: \"Email\", type: \"email\" },\n\t\tpassword: { label: \"Password\", type: \"password\" },\n\t  },\n\t  async authorize(credentials) {\n\t\tif (!credentials?.email || !credentials?.password) return null;\n\n\t\tconst user = await prisma.user.findUnique({\n\t\t  where: { email: credentials.email },\n\t\t});\n\n\t\t// IMPORTANT: In production, NEVER compare plain passwords directly\n\t\tif (user && user.password === credentials.password) {\n\t\t  return { id: user.id, name: user.email, email: user.email };\n\t\t}\n\t\treturn null;\n\t  },\n\t}),\n  ],\n  pages: {\n\tsignIn: \"/auth/signin\",\n  },\n  session: {\n\tstrategy: \"jwt\",\n  },\n  callbacks: {\n\tasync session({ session, token }) {\n\t  if (session.user) {\n\t\tsession.user.id = token.id;\n\t\tsession.user.email = token.email;\n\t  }\n\t  return session;\n\t},\n  },\n};\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;;;;;AAE1C;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,6IAAY;AAExB,MAAM,cAA+B;IAC1C,WAAW;QACZ,IAAA,mZAAmB,EAAC;YAClB,MAAM;YACN,aAAa;gBACd,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAC/C;YACA,MAAM,WAAU,WAAW;gBAC5B,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU,OAAO;gBAE1D,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;oBACxC,OAAO;wBAAE,OAAO,YAAY,KAAK;oBAAC;gBACpC;gBAEA,mEAAmE;gBACnE,IAAI,QAAQ,KAAK,QAAQ,KAAK,YAAY,QAAQ,EAAE;oBAClD,OAAO;wBAAE,IAAI,KAAK,EAAE;wBAAE,MAAM,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK;oBAAC;gBAC5D;gBACA,OAAO;YACN;QACF;KACE;IACD,OAAO;QACR,QAAQ;IACP;IACA,SAAS;QACV,UAAU;IACT;IACA,WAAW;QACZ,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,EAAE;gBACnB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;YAC/B;YACA,OAAO;QACT;IACC;AACF;AAEA,MAAM,UAAU,IAAA,gYAAQ,EAAC","debugId":null}}]
}